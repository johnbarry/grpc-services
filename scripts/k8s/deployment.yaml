apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    domain: numbers
    app: demo-grpc-service
    version: "1.0"
    environment: dev
  name: demo-grpc-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-grpc-service
  template:
    metadata:
      creationTimestamp: null
      labels:
        domain: numbers
        app: demo-grpc-service
        version: "1.0"
    spec:
      containers:
      - image: number-demo/gprc-server:v1
        imagePullPolicy: Never
        name: demo-grpc-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    domain: numbers
    app: demo-f1
    version: "1.0"
    environment: dev
  name: demo-f1
spec:
  replicas: 0 # Will keep restarting
  selector:
    matchLabels:
      app: demo-f1
  template:
    metadata:
      labels:
        domain: numbers
        app: demo-f1
        version: "1.0"
        environment: dev
    spec:
      containers:
        - image: number-demo/number-ms:v1
          imagePullPolicy: Never
          name: demo-f1
          env:
            - name: CFG_GRPC_HOST
              value: demo-grpc-service-grpc
            - name: CFG_GRPC_PORT
              value: "50051"
            - name: CFG_KAFKA_BOOTSTRAP
              value: "my-cluster-kafka-plain-bootstrap.kafka.svc.cluster.local:9092"
            - name: CFG_FUNCTION
              value: f1
            - name: CFG_INPUT
              value: generator
            - name: CFG_GENERATION_SIZE
              value: "5000"
            - name: CFG_OUTPUT
              value: f1-output
            - name: CFG_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['environment']
            - name: CFG_DOMAIN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['domain']
            - name: CFG_APPLICATION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    domain: numbers
    app: demo-f2
    version: "1.0"
    environment: dev
  name: demo-f2
spec:
  replicas: 0
  selector:
    matchLabels:
      app: demo-f2
  template:
    metadata:
      labels:
        domain: numbers
        app: demo-f2
        version: "1.0"
        environment: dev
    spec:
      containers:
        - image: number-demo/number-ms:v1
          imagePullPolicy: Never
          name: demo-f2
          env:
            - name: CFG_GRPC_HOST
              value: demo-grpc-service-grpc
            - name: CFG_GRPC_PORT
              value: "50051"
            - name: CFG_KAFKA_BOOTSTRAP
              value: "my-cluster-kafka-plain-bootstrap.kafka.svc.cluster.local:9092"
            - name: CFG_FUNCTION
              value: f2
            - name: CFG_INPUT
              value: f1-output
            - name: CFG_OUTPUT
              value: f2-output
            - name: CFG_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['environment']
            - name: CFG_DOMAIN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['domain']
            - name: CFG_APPLICATION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    domain: numbers
    app: demo-f3
    version: "1.0"
    environment: dev
  name: demo-f3
spec:
  replicas: 0
  selector:
    matchLabels:
      app: demo-f3
  template:
    metadata:
      labels:
        domain: numbers
        app: demo-f3
        version: "1.0"
        environment: dev
    spec:
      containers:
        - image: number-demo/number-ms:v1
          imagePullPolicy: Never
          name: demo-f3
          env:
            - name: CFG_GRPC_HOST
              value: demo-grpc-service-grpc
            - name: CFG_GRPC_PORT
              value: "50051"
            - name: CFG_KAFKA_BOOTSTRAP
              value: "my-cluster-kafka-plain-bootstrap.kafka.svc.cluster.local:9092"
            - name: CFG_FUNCTION
              value: f3
            - name: CFG_INPUT
              value: f2-output
            - name: CFG_OUTPUT
              value: f3-output
            - name: CFG_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['environment']
            - name: CFG_DOMAIN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['domain']
            - name: CFG_APPLICATION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    domain: numbers
    app: stream-test
    version: "1.0"
    environment: dev
  name: stream-test
spec:
  replicas: 0 # Will keep restarting
  selector:
    matchLabels:
      app: stream-test
  template:
    metadata:
      labels:
        domain: numbers
        app: stream-test
        version: "1.0"
        environment: dev
    spec:
      containers:
        - image: number-demo/number-ms:v1
          imagePullPolicy: Never
          name: stream-test
          env:
            - name: CFG_GRPC_HOST
              value: demo-grpc-service-grpc
            - name: CFG_GRPC_PORT
              value: "50051"
            - name: CFG_KAFKA_BOOTSTRAP
              value: "my-cluster-kafka-plain-bootstrap.kafka.svc.cluster.local:9092"
            - name: CFG_FUNCTION
              value: f1
            - name: CFG_INPUT
              value: generator
            - name: CFG_GENERATION_SIZE
              value: "100000"
            - name: CFG_OUTPUT
              value: f1-output
            - name: CFG_TIME_STREAMING
              value: "Y"
            - name: CFG_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['environment']
            - name: CFG_DOMAIN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['domain']
            - name: CFG_APPLICATION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: demo-grpc-service
    version: "1.0"
  name: demo-grpc-service-rest
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: demo-grpc-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: demo-grpc-service
    version: "1.0"
  name: demo-grpc-service-grpc
spec:
  ports:
  - name: grpc
    port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app: demo-grpc-service
  type: ClusterIP
